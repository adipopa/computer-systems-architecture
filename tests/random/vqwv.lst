     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import printf msvcrt.dll
    11                                                            
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14 00000000 78A63412C878563434-         sir dd 1234A678h, 345678C8h, 4B5C1234h
    14 00000009 125C4B             
    15                                      len equ ($-sir) / 4
    16 0000000C 0000<rept>                  result_s times len dw 0
    17 00000012 00000000                    no_of_bytes dd 0
    18 00000016 2564                        p_format db "%d"
    19                                  
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23 00000000 31C0                            xor eax, eax
    24                                          
    25 00000002 BE[00000000]                    mov esi, sir
    26 00000007 BF[0C000000]                    mov edi, result_s
    27 0000000C B903000000                      mov ecx, len
    28                                          
    29 00000011 E346                            jecxz finish_alg
    30                                          
    31                                          parse_string:
    32 00000013 51                                  push ecx
    33                                              
    34 00000014 AD                                  lodsd
    35                                              
    36 00000015 89C3                                mov ebx, eax
    37                                              
    38 00000017 C1E808                              shr eax, 8
    39 0000001A C1EB10                              shr ebx, 16
    40                                              
    41 0000001D 88FC                                mov ah, bh
    42                                              
    43 0000001F 66AB                                stosw
    44                                              
    45 00000021 59                                  pop ecx
    46 00000022 E2EF                            loop parse_string
    47                                          
    48 00000024 BE[0C000000]                    mov esi, result_s
    49 00000029 B903000000                      mov ecx, len
    50                                          
    51                                          count_bytes:
    52 0000002E 51                                  push ecx
    53                                              
    54 0000002F 66AD                                lodsw
    55                                              
    56 00000031 B910000000                          mov ecx, 16
    57                                              inner_loop:
    58 00000036 D1E8                                    shr eax, 1
    59 00000038 7306                                    jnc not_a_one
    60 0000003A FF05[12000000]                          inc dword [no_of_bytes]
    61                                                  not_a_one:
    62 00000040 E2F4                                loop inner_loop
    63                                  
    64 00000042 59                                  pop ecx
    65 00000043 E2E9                            loop count_bytes
    66                                          
    67 00000045 FF35[12000000]                  push dword [no_of_bytes]
    68 0000004B 68[16000000]                    push dword p_format
    69 00000050 FF15[00000000]                  call [printf]
    70 00000056 83C408                          add esp, 4*2
    71                                          
    72                                          finish_alg:
    73                                      
    74                                          ; exit(0)
    75 00000059 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    76 0000005B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
